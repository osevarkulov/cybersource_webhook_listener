const express = require('express');
const crypto = require('crypto');
const bodyParser = require('body-parser');
const fs = require('fs');

require("dotenv").config();

const app = express();
const PORT = 3000;

// ๐ ะขะฒะพะน ัะตะบัะตัะฝัะน ะบะปัั (ะธะท ะฝะฐัััะพะตะบ CyberSource)
const SECRET_KEY = process.env.secret_key;
// Middleware ะดะปั ะพะฑัะฐะฑะพัะบะธ JSON
app.use(bodyParser.json());

// ๐ ะัะพะฒะตัะบะฐ ะฟะพะดะฟะธัะธ ะพั CyberSource
function verifySignature(req) {
    const signatureHeader = req.headers['x-cybersource-signature'];
    if (!signatureHeader) return false;

    const requestBody = JSON.stringify(req.body);
    const computedSignature = crypto
        .createHmac('sha256', SECRET_KEY)
        .update(requestBody)
        .digest('base64');

    return computedSignature === signatureHeader;
}

// ๐ ะคะพัะผะธัะพะฒะฐะฝะธะต ะฟะพะดะฟะธัะฐะฝะฝะพะณะพ ะพัะฒะตัะฐ
function generateSignature(responseBody) {
    return crypto
        .createHmac('sha256', SECRET_KEY)
        .update(responseBody)
        .digest('base64');
}

// ๐ Health Check (ะดะปั CyberSource)
app.get('/health-check', (req, res) => {
    res.status(200).send('Webhook is healthy');
});

// ๐ Webhook (ะพะฑัะฐะฑะพัะบะฐ ัะฒะตะดะพะผะปะตะฝะธะน ะพั CyberSource)
app.post('/cybersource-webhook', (req, res) => {
    console.log('๐น ะัะพะดััะธะน ะฒะตะฑััะบ:', req.body);

    // 1๏ธโฃ ะัะพะฒะตััะตะผ ะฟะพะดะฟะธัั
    if (!verifySignature(req)) {
        console.error('โ ะะตะฒะตัะฝะฐั ะฟะพะดะฟะธัั!');
        return res.status(401).json({ error: 'Invalid signature' });
    }

    // 2๏ธโฃ ะะพะณะธััะตะผ ะดะฐะฝะฝัะต
    const timestamp = new Date().toISOString();
    const logData = `[${timestamp}] ${JSON.stringify(req.body, null, 2)}\n\n`;
    fs.appendFile('cybersource_webhook.log', logData, (err) => {
        if (err) console.error('ะัะธะฑะบะฐ ะทะฐะฟะธัะธ ะฒ ะปะพะณ:', err);
    });

    // 3๏ธโฃ ะคะพัะผะธััะตะผ ะพัะฒะตั ะธ ะฟะพะดะฟะธััะฒะฐะตะผ ะตะณะพ
    const responseBody = JSON.stringify({ message: 'Webhook received' });
    const signature = generateSignature(responseBody);

    // 4๏ธโฃ ะัะฟัะฐะฒะปัะตะผ ะพัะฒะตั CyberSource
    res.setHeader('x-cybersource-signature', signature);
    res.status(200).json({ message: 'Webhook received' });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, () => {
    console.log(`๐ ะกะตัะฒะตั ัะปััะฐะตั ะฒะตะฑััะบะธ ะฝะฐ http://localhost:${PORT}`);
});
